@mixin centerer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

// legacy, but already integrated in the site
// @mixin gridLayout($w, $c, $g, $s) {
//     text-align: center;
//     margin: 0 auto 0 auto;
//     width: $w;
//     ul {
//         text-align: left;
//         width: $w;
//         margin: 0 auto 0 auto;
//         display: inline-block;
//         list-style: none;
//         @include clearfix;

//         >li {
//             $d: colWidth($w, $c, $g);
//             width: $d;
//             height: auto;
//             float: left;

//             div.image {
//                 @if $s==true {
//                     height: $d
//                 }
//             }

//             &:nth-child(n+1) {
//                 // this will reset each child before applying to the target
//                 margin: 0 $g $g 0;
//             }

//             &:nth-child(#{$c}n) {
//                 margin: 0 0 $g 0;
//             }
//         }
//     }
// }

// updated, production worthy gridLayout mixin
@mixin gridLayout($w, $c, $g, $s) {
    > ul {
        display: inline-block;
        width: $w;
        margin: 0 auto 0 auto;

        >li {
            $d: colWidth($w, $c, $g);
            width: $d;
            height: auto;
            float: left;

            div.image
            ,div.block {
                overflow: hidden;
                // width: 100%;
                @if $s==true {
                    height: $d
                }

                >div {
                    transform: scale(1.0);
                    transition: all .5s;
                    background: black;
                }
            }

            &:nth-child(n+1) {
                // this will reset each child before applying to the target
                margin: 0 $g $g 0;
            }

            &:nth-child(#{$c}n) {
                margin: 0 0 $g 0;
            }
        }
    }
}



// this will set column widths for grid items
@function colWidth($w, $c, $g) {
    @return (($w - (($c - 1) * $g)) / $c);
}